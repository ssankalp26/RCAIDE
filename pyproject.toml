[build-system]
requires = ["setuptools>=64"]
build-backend = "setuptools.build_meta"

[project]
name = "rcaide-sai"
version = "24.0.1"
authors = [
  {name = "LEADS Research Group"},
]
maintainers = [
  {name = "LEADS Research Group"},
]
description = ""
readme = {file = "README.md", content-type = "text/markdown"}
license = { file = "LICENSE" }
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
]
requires-python = ">=3.9, <3.13"
dependencies = [
  "",
  "numpy>=1.16, <2.0",
  "scipy>=1.3",
  "",
]
[tool.setuptools.packages.find]
include = ["rcaide-sai", "rcaide-sai.*"]

[tool.pytest.ini_options]
addopts = "--showlocals -v -n auto"

[tool.ruff]
extend-exclude = ["__init__.py"]
fix = true

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins: Check for Python builtins being used as variables or parameters
    "B",    # flake8-bugbear: Find likely bugs and design problems
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes: Detect various errors by parsing the source file
    "I",    # isort: Check and enforce import ordering
    "ISC",  # flake8-implicit-str-concat: Check for implicit string concatenation
    "TID",  # flake8-tidy-imports: Validate import hygiene
    "UP",   # pyupgrade: Automatically upgrade syntax for newer versions of Python
    "SLF001",  # flake8-string-format: Check for private object name access
]

ignore = ["E501","E741"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["SLF001"]
"**.ipynb" = ["E402", "E703"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
